
@model ProvaWilliam.Models.SearchResultViewModel

@{



    var respostaDelete = ViewBag.respostaDelete as ProvaWilliam.Models.DTOs.RespostaDTO;
    var respostaMSGSemEspecialidade = ViewBag.respostaMSGSemEspecialidade as string;
}

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Medicos</h2>

<div class="row">

<div class="col-md-6">

@if (respostaDelete != null)
{<p style="color:@(respostaDelete.Sucesso?"green":"red")">@respostaDelete.Mensagem</p>}

@using (Html.BeginForm("SearchMedicos", "Medico", FormMethod.Get))
{
    <p>
        Nome: @Html.TextBox("nome", "", new { @class = "form-control" })
        CRM: @Html.TextBox("crm", "", new { @class = "form-control" })
        Especialidade: @Html.DropDownList("id_especialidade",
new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "Selecione uma Especialidade", new { @class = "form-control", id = "especialidadeDropdown" })


        <input type="submit" value="Pesquisar" />
    </p>

}
</div>
<div class="col-md-6">


<p>
    @Html.ActionLink("Registrar novo medico", "Create", "", new { @class = "btn btn-primary" })
</p>
@if (!string.IsNullOrEmpty( respostaMSGSemEspecialidade) )
{<p >@respostaMSGSemEspecialidade</p>}

</div>

</div>

<table class="table table-striped table-dark">
    <tr>
        <th>
            Descrição
        </th>
        <th>
            Nome do médico
        </th>
        <th>
            CRM
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Medicos)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Especialidade.descricao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.crm)
            </td>
            <td>
                @Html.ActionLink("Editar", "Edit", new { id = item.id }, new { @class = "btn btn-primary btn-sm" }) |
                @Html.ActionLink("Detalhes", "Details", new { id = item.id }, new { @class = "btn btn-primary btn-sm" }) |
                @Html.ActionLink("Deletar", "Delete", new { id = item.id }, new { @class = "btn btn-danger btn-sm" })
            </td>
        </tr>
    }

</table>


<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                @Html.ActionLink("Anterior", "Index", new { pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize }, new { @class = "page-link" })
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Anterior</span>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.CurrentPage)
            {
                <li class="page-item active">
                    <span class="page-link">
                        @i
                    </span>
                </li>
            }
            else
            {
                <li class="page-item">
                    @Html.ActionLink(i.ToString(), "Index", new { pageNumber = i, pageSize = Model.PageSize }, new { @class = "page-link" })
                </li>
            }
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li class="page-item">
                @Html.ActionLink("Próximo", "Index", new { pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize }, new { @class = "page-link" })
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Próximo</span>
            </li>
        }
    </ul>
</nav>

<script src="~/Scripts/scripstsViews/jquery.min.js"></script>
<script src="~/Scripts/scripstsViews/FuncaoBuscaEspecialidade.js"></script>